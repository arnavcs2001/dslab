// Data Structures
// Priority Queue Implementation

#include <stdio.h>
#include <stdlib.h>

int front,rear;
front = -1, rear = -1;
int A[50];

void insert_by_priority(int data)
{
    if(rear >= 49)
    {
        printf("Overflow\n");
        return;
    }
    
    if((front == -1) && (rear == -1))
    {
        front++;
        rear++;
        A[rear] = data;
        return;
    }
     else
     {
        check(data);
     }
     rear++;
}

void check(int data)
{
    int i,j;
    for(i = 0; i<=rear; i++)
    {
        if(data >= A[i])
        {
            for(j=rear+1;j>i;j--)
            {
                A[j] = A[j-1];
            }
            A[i] = data;
            return;
        }
    }
    A[i] = data;
}

void delete_by_priority(int data)
{
    int i;
    if((front == -1) && (rear == -1))
    {
        printf("Empty queue\n");
        return;
    }
    for(i = 0; i<=rear; i++)
    {
        if(data == A[i])
        {
            for(;i<rear;i++)
            {
                A[i] = A[i+1];
            }
            
            rear--;
            
         if(rear == -1)
         {
             front = -1;
         }
         return;
        }
    }    
    printf("Element not found\n");
}

void display()
{
    if((front == -1) && (rear == -1))
    {
        printf("Empty queue\n");
        return;
    }
    else
    {
        for(;front<=rear;front++)
        {
            printf("%d \n",A[front]);
        }
        front = 0; 
    }
}

int main()
{
    int choice,value;
    while(choice != 4)
    {
       printf("Please enter your choice: 1.insert by priority, 2.delete by priority 3.display 4.exit\n");
       scanf("%d",&choice);
       switch(choice)
       {
           case 1: printf("Enter the value you want to insert: ");
                   scanf("%d",&value);
                   insert_by_priority(value);
                   break;
           case 2: printf("Enter the value you want to delete: ");
                   scanf("%d",&value);
                   delete_by_priority(value);
                   break;
           case 3: display();
                   break;
           case 4: exit(0);
           default: printf("Wrong selection\n");
       }
    }
    
    
    return 0;
}
